#version 430

layout (location = 0, rgba32f) uniform image2D map;
layout (location = 1, rgba32f) uniform image2D post;
layout (location = 2) uniform float delta;

layout (local_size_x = 16, local_size_y = 16) in;


void main() 
{
	const uint id = gl_GlobalInvocationID.y * (gl_NumWorkGroups.x * gl_WorkGroupSize.x) + gl_GlobalInvocationID.x;
	const ivec2 imgSize = imageSize(map);
	
	const int x = int(gl_GlobalInvocationID.x);
	const int y = int(gl_GlobalInvocationID.y);

	if(x < 0 || x >= imgSize.x || y < 0 || y >= imgSize.y)
	{
		return;
	}

	vec3 sum = vec3(0.0);
	for (int i = x - 1; i <= x + 1; i++)
	{
		for (int j = y - 1; j <= y + 1; j++)
		{
			if (i >= 0 && i < imgSize.x && j >= 0 && j < imgSize.y)
				sum += imageLoad(map, ivec2(i, j)).rgb;
		}
	}
	sum /= 9.0;
	vec3 diffuse = mix(imageLoad(map, ivec2(x, y)).rgb, sum, delta * 10.0).rgb;
	vec3 clr = max(vec3(.0), diffuse - delta * 0.1);

	imageStore(post, ivec2(gl_GlobalInvocationID.xy), vec4(clr, 1.0));
}
